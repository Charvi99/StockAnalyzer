version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: timescale/timescaledb:latest-pg14
    container_name: stock_analyzer_db
    environment:
      POSTGRES_DB: stock_analyzer
      POSTGRES_USER: stockuser
      POSTGRES_PASSWORD: stockpass123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # init.sql is no longer used - we use Alembic migrations instead
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stockuser -d stock_analyzer"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: stock_analyzer_backend
    environment:
      DATABASE_URL: postgresql://stockuser:stockpass123@database:5432/stock_analyzer
      PYTHONUNBUFFERED: 1
      POLYGON_API_KEY: ${POLYGON_API_KEY:-demo}  # Set in .env file
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_models:/app/ml/models
      - ./ml_training:/app/ml_training
    depends_on:
      database:
        condition: service_healthy
    # Command is now handled by start.sh script in Dockerfile

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: stock_analyzer_frontend
    environment:
      REACT_APP_API_URL: http://127.0.0.1:8000
      HOST: 0.0.0.0
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  backend_models:
  frontend_node_modules:
